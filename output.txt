--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\middleware.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { NextRequest, NextResponse } from 'next/server';

import { PUBLIC_URL } from './config/url.config';
import { EnumTokens } from './services/auth/auth-token.service';

export async function middleware(request: NextRequest) {
  const refreshToken = request.cookies.get(EnumTokens.REFRESH_TOKEN)?.value;
  const isAuthPage = request.url.includes(PUBLIC_URL.auth());

  if (isAuthPage) {
    if (refreshToken) {
      return NextResponse.redirect(new URL(PUBLIC_URL.home(), request.url));
    }

    return NextResponse.next();
  }

  if (refreshToken === undefined) {
    return NextResponse.redirect(new URL(PUBLIC_URL.auth(), request.url));
  }

  return NextResponse.next();
}

export const config = {
  matcher: ['/dashboard/:path*', '/store/:path*', '/auth']
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\api\api.helper.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const getContentType = () => ({
  'Content-type': 'application/json'
});

export const errorCatch = (error: any): string => {
  const message = error?.response?.data?.message;

  return message
    ? typeof error.response.data.message === 'object'
      ? message[0]
      : message
    : error.message;
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\api\api.hepler.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const getContentType = () => ({
	'Content-type': 'application/json'
})

export const errorCatch = (error: any): string => {
	const message = error?.response?.data?.message

	return message
		? typeof error.response.data.message === 'object'
			? message[0]
			: message
		: error.message
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\api\api.interceptors.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import axios, { type CreateAxiosDefaults } from 'axios';

import { SERVER_URL } from '@/config/api.config';

import {
  getAccessToken,
  removeFromStorage
} from '@/services/auth/auth-token.service';
import { authService } from '@/services/auth/auth.service';

import { errorCatch, getContentType } from './api.helper';

const options: CreateAxiosDefaults = {
  baseURL: SERVER_URL,
  headers: getContentType(),
  withCredentials: true
};

export const axiosClassic = axios.create(options);
export const axiosWithAuth = axios.create(options);

axiosWithAuth.interceptors.request.use(config => {
  const accessToken = getAccessToken();

  if (config?.headers && accessToken)
    config.headers.Authorization = `Bearer ${accessToken}`;

  return config;
});

axiosWithAuth.interceptors.response.use(
  config => config,
  async error => {
    const originalRequest = error.config;

    if (
      (error?.response?.status === 401 ||
        errorCatch(error) === 'jwt expired' ||
        errorCatch(error) === 'jwt must be provided') &&
      error.config &&
      !error.config._isRetry
    ) {
      originalRequest._isRetry = true;
      try {
        await authService.getNewTokens();
        return axiosWithAuth.request(originalRequest);
      } catch (error) {
        if (errorCatch(error) === 'jwt expired') removeFromStorage();
      }
    }

    throw error;
  }
);


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\globals.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	:root {
		--background: 0 0% 100%;
		--foreground: 222.2 84% 4.9%;
		--card: 0 0% 100%;
		--card-foreground: 222.2 84% 4.9%;
		--popover: 0 0% 100%;
		--popover-foreground: 222.2 84% 4.9%;
		--primary: 222.2 47.4% 11.2%;
		--primary-foreground: 210 40% 98%;
		--secondary: 210 40% 96.1%;
		--secondary-foreground: 222.2 47.4% 11.2%;
		--muted: 210 40% 96.1%;
		--muted-foreground: 215.4 16.3% 46.9%;
		--accent: 210 40% 96.1%;
		--accent-foreground: 222.2 47.4% 11.2%;
		--destructive: 0 84.2% 60.2%;
		--destructive-foreground: 210 40% 98%;
		--border: 214.3 31.8% 91.4%;
		--input: 214.3 31.8% 91.4%;
		--ring: 222.2 84% 4.9%;
		--radius: 0.5rem;
		--chart-1: 12 76% 61%;
		--chart-2: 173 58% 39%;
		--chart-3: 197 37% 24%;
		--chart-4: 43 74% 66%;
		--chart-5: 27 87% 67%;
	}

	.dark {
		--background: 222.2 84% 4.9%;
		--foreground: 210 40% 98%;
		--card: 222.2 84% 4.9%;
		--card-foreground: 210 40% 98%;
		--popover: 222.2 84% 4.9%;
		--popover-foreground: 210 40% 98%;
		--primary: 210 40% 98%;
		--primary-foreground: 222.2 47.4% 11.2%;
		--secondary: 217.2 32.6% 17.5%;
		--secondary-foreground: 210 40% 98%;
		--muted: 217.2 32.6% 17.5%;
		--muted-foreground: 215 20.2% 65.1%;
		--accent: 217.2 32.6% 17.5%;
		--accent-foreground: 210 40% 98%;
		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 210 40% 98%;
		--border: 217.2 32.6% 17.5%;
		--input: 217.2 32.6% 17.5%;
		--ring: 212.7 26.8% 83.9%;
		--chart-1: 220 70% 50%;
		--chart-2: 160 60% 45%;
		--chart-3: 30 80% 55%;
		--chart-4: 280 65% 60%;
		--chart-5: 340 75% 55%;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	body {
		@apply bg-background text-foreground;

		font-family: var(--font-geist-sans), sans-serif;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\layout.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';

import { SITE_DESCRIPTION, SITE_NAME } from '@/constants/seo.constants';

import '@/styles/globals.scss';
import { Providers } from './providers';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
});

export const generateMetadata = (): Metadata => ({
  title: {
    absolute: SITE_NAME,
    template: `%s | ${SITE_NAME}`
  },
  description: SITE_DESCRIPTION
});

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\providers.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { PropsWithChildren, useState } from 'react';
import { Toaster } from 'react-hot-toast';
import { Provider } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';

import { persistor, store } from '@/store/store';

export function Providers({ children }: PropsWithChildren) {
  const [client] = useState(
    new QueryClient({
      defaultOptions: {
        queries: {
          refetchOnWindowFocus: false
        }
      }
    })
  );
  return (
    <QueryClientProvider client={client}>
      <Provider store={store}>
        <PersistGate loading={null} persistor={persistor}>
          <Toaster />
          {children}
        </PersistGate>
      </Provider>
    </QueryClientProvider>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\Home.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { Catalog } from '@/components/layouts/ui/catalog/Catalog';

import { PUBLIC_URL } from '@/config/url.config';

import { IProduct } from '@/shared/types/product.interface';

import { Hero } from './hero/Hero';

// eslint-disable-next-line @typescript-eslint/no-unused-vars
interface HomeProps {
  products: IProduct[];
}

export function Home({ products }: HomeProps) {
  return (
    <>
      <Hero />
      <Catalog
        title="Bestsellers"
        description="The most popular products in our store."
        linkTitle="Find out more"
        link={PUBLIC_URL.explorer()}
        products={products}
      />
    </>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\layout.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { MainLayout } from "@/components/layouts/main-layout/MainLayout";
import { PropsWithChildren } from "react";

export default function Layout ({ children}: PropsWithChildren<unknown>) {
    return (
        <MainLayout>
            {children}
        </MainLayout>
    )
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { Metadata } from 'next'

import { productService } from '@/services/product.service'

import { Home } from './Home'

export const metadata: Metadata = {
	title: 'Your shopping, your pleasure - all in one place'
}

export const revalidate = 60

async function getProducts() {
	const data = (await productService.getMostPopular()).slice(0, 6)

	return data
}

export default async function HomePage() {
	const data = await getProducts()

	return <Home products={data} />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\category\[id]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\category\[id]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\Dashboard.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply my-6;

	> .header {
		@apply flex items-center justify-between mb-4;

		> h1 {
			@apply text-2xl font-bold;
		}

		svg {
			@apply size-4 mr-2;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\Dashboard.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client'

import { saveTokenToStorage } from "@/services/auth/auth-token.service"
import { useSearchParams } from "next/navigation"
import { useEffect } from "react"

export function Dashboard() {
    const searchParams = useSearchParams()

    useEffect(() => {
        const accessToken = searchParams.get('accessToken')

        if (accessToken) saveTokenToStorage(accessToken)
    }, [searchParams])

    return <div>Dashboard</div>
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\OrderColumns.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { ColumnDef } from '@tanstack/react-table';
import { ArrowUpDown } from 'lucide-react';

import { Button } from '@/components/layouts/ui/Button';

export interface IOrderColumn {
  createdAt: string;
  status: string;
  total: string;
}

export const orderColumns: ColumnDef<IOrderColumn>[] = [
  {
    accessorKey: 'createdAt',
    header: ({ column }) => {
      return (
        <Button
          variant="ghost"
          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}
        >
          Payment date
          <ArrowUpDown className="ml-2 h-4 w-4" />
        </Button>
      );
    }
  },
  {
    accessorKey: 'status',
    header: ({ column }) => {
      return (
        <Button
          variant="ghost"
          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}
        >
          Status
          <ArrowUpDown className="ml-2 h-4 w-4" />
        </Button>
      );
    }
  },
  {
    accessorKey: 'total',
    header: ({ column }) => {
      return (
        <Button
          variant="ghost"
          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}
        >
          Sum
          <ArrowUpDown className="ml-2 h-4 w-4" />
        </Button>
      );
    }
  }
];


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { Metadata } from 'next'

import { NO_INDEX_PAGE } from '@/constants/seo.constants'
import { Dashboard } from './Dashboard'



export const metadata: Metadata = {
	title: 'Personal account',
	...NO_INDEX_PAGE
}

export default function DashboardPage() {
	return <Dashboard />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\favorites\Favorites.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { Catalog } from '@/components/layouts/ui/catalog/Catalog';

import { useProfile } from '@/hooks/useProfile';

export function Favorites() {
  const { user } = useProfile();

  if (!user) return null;

  return (
    <div className="my-6">
      <Catalog title="Favorites" products={user.favorites} />
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\dashboard\favorites\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { Metadata } from 'next'

import { NO_INDEX_PAGE } from '@/constants/seo.constants'

import { Favorites } from './Favorites'

export const metadata: Metadata = {
	title: 'Favorites',
	...NO_INDEX_PAGE
}

export default function FavoritesPage() {
	return <Favorites />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\explorer\Explorer.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { useQuery } from '@tanstack/react-query';
import { useSearchParams } from 'next/navigation';

import { Catalog } from '@/components/layouts/ui/catalog/Catalog';

import { productService } from '@/services/product.service';

import { IProduct } from '@/shared/types/product.interface';

interface ExplorerProps {
  products: IProduct[];
}

export function Explorer({ products }: ExplorerProps) {
  const searchParams = useSearchParams();
  const searchTerm = searchParams.get('searchTerm');

  const { data } = useQuery({
    queryKey: ['product explorer', searchTerm],
    queryFn: () => productService.getAll(searchTerm),
    initialData: products
  });

  return (
    <div className="my-6">
      <Catalog
        title={
          searchTerm ? `Search by request "${searchTerm}"` : 'Product catalog'
        }
        products={data}
      />
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\explorer\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { Metadata } from 'next'

import { productService } from '@/services/product.service'

import { Explorer } from './Explorer'

export const metadata: Metadata = {
	title: 'Product catalog'
}

export const revalidate = 60

async function getProducts() {
	const data = await productService.getAll()

	return data
}

export default async function ExplorerPage() {
	const data = await getProducts()

	return <Explorer products={data} />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\hero\Hero.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.section {
	@apply my-24 py-20 mx-auto text-center flex flex-col items-center max-w-4xl space-y-6;

	> .heading {
		@apply text-4xl font-bold tracking-tight md:text-5xl;

		> span {
			@apply text-blue-600;
		}
	}

	> .description {
		@apply text-lg text-muted-foreground;
	}

	button {
		> svg {
			@apply size-4 ml-2 transition-all;
		}

		&:hover {
			> svg {
				@apply ml-3;
			}
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\hero\Hero.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { ArrowRight } from 'lucide-react';
import Link from 'next/link';

import { Button } from '@/components/layouts/ui/Button';

import { PUBLIC_URL } from '@/config/url.config';

import { SITE_DESCRIPTION } from '@/constants/seo.constants';

import styles from './Hero.module.scss';

export function Hero() {
  return (
    <div className={styles.section}>
      <h1 className={styles.heading}>
        Your shopping, your pleasure – <span>all in one place</span>
      </h1>
      <p className={styles.description}>{SITE_DESCRIPTION}</p>
      <Link href={PUBLIC_URL.explorer()}>
        <Button variant="default">
          Shopping
          <ArrowRight />
        </Button>
      </Link>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/22/2025 12:48:08
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\Product.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\Product.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\Product.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\Product.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\prodcut-gallery\ProdcutGallery.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\prodcut-gallery\ProdcutGallery.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\prodcut-gallery\ProdcutGallery.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\prodcut-gallery\ProdcutGallery.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\AddToCartButton.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\AddToCartButton.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\FavoriteButton.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\FavoriteButton.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\ProductInfo.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\ProductInfo.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\ProductInfo.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-info\ProductInfo.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-reviews\ProductReviews.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-reviews\ProductReviews.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-reviews\ProductReviews.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\product\[id]\product-reviews\ProductReviews.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\(root)\thanks\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { ArrowRight } from 'lucide-react';
import type { Metadata } from 'next';
import Link from 'next/link';

import { Button } from '@/components/layouts/ui/Button';

import { PUBLIC_URL } from '@/config/url.config';

import { NO_INDEX_PAGE } from '@/constants/seo.constants';

import styles from '../hero/Hero.module.scss';

export const metadata: Metadata = {
  title: 'Thanks for your purchase',
  ...NO_INDEX_PAGE
};

export default function ThanksPage() {
  return (
    <div className={styles.section}>
      <h1 className={styles.heading}>Thanks for your purchase</h1>
      <p className={styles.description}>
        Thank you for your order! We appreciate your trust and will do our best
        efforts to deliver your order as soon as possible
      </p>
      <Link href={PUBLIC_URL.home()}>
        <Button variant="default">
          Home
          <ArrowRight />
        </Button>
      </Link>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\Auth.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply min-h-screen grid grid-cols-1 lg:grid-cols-2;

	> .left {
		@apply h-full bg-blue-600 hidden lg:flex items-center justify-center;
	}

	> .right {
		@apply h-full flex flex-col items-center justify-center;

		> .card {
			@apply border-none p-6 flex flex-col items-center justify-center w-[380px];

			> .header {
				@apply text-center pb-5;

				> h3 {
					@apply pb-1 text-3xl font-bold;
				}
			}

			> .content {
				@apply p-0 w-full;

				form {
					@apply space-y-5;

					button {
						@apply w-full;
					}
				}

				> .social {
					@apply space-y-3 w-full mt-5;

					> button {
						@apply w-full;

						> svg {
							@apply size-5 mr-2;
						}
					}
				}
			}

			> .footer {
				@apply p-0 mt-4 text-sm text-muted-foreground;

				> button {
					@apply ml-1 text-sky-600;
				}
			}
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\Auth.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import Image from 'next/image';
import { useState } from 'react';

import { Button } from '@/components/layouts/ui/Button';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle
} from '@/components/layouts/ui/Card';
import { Form } from '@/components/layouts/ui/form-elements/Form';

import styles from './Auth.module.scss';
import { AuthFields } from './AuthFields';
import { Social } from './Social';
import { useAuthForm } from './useAuthForm';

export function Auth() {
  const [isReg, setIsReg] = useState(false);

  const { onSubmit, form, isPending } = useAuthForm(isReg);

  return (
    <div className={styles.wrapper}>
      <div className={styles.left}>
        <Image
          src="/images/auth.svg"
          alt="TeaShop auth"
          width={100}
          height={100}
        />
      </div>
      <div className={styles.right}>
        <Card className={styles.card}>
          <CardHeader className={styles.header}>
            <CardTitle>{isReg ? 'Create Accaunt' : 'Login'}</CardTitle>
            <CardDescription>
              Login or Reagister to make purchases !
            </CardDescription>
          </CardHeader>
          <CardContent className={styles.content}>
            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)}>
                <AuthFields form={form} isPending={isPending} isReg={isReg} />

                <Button disabled={isPending}>Continue</Button>
              </form>
            </Form>
            <Social />
          </CardContent>
          <CardFooter className={styles.footer}>
            {isReg ? 'Already have an account?' : "Don't have an account yet?"}
            <button onClick={() => setIsReg(!isReg)}>
              {isReg ? 'Login' : 'Create'}
            </button>
          </CardFooter>
        </Card>
      </div>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\AuthFields.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { UseFormReturn } from 'react-hook-form';

import {
  FormControl,
  FormField,
  FormItem,
  FormMessage
} from '@/components/layouts/ui/form-elements/Form';
import { Input } from '@/components/layouts/ui/form-elements/Input';

import { validEmail } from '@/shared/regex';
import { IAuthForm } from '@/shared/types/auth.interface';

interface AuthFieldsProps {
  form: UseFormReturn<IAuthForm, undefined>;
  isPending: boolean;
  isReg?: boolean;
}

export function AuthFields({
  form,
  isPending,
  isReg = false
}: AuthFieldsProps) {
  return (
    <>
      {isReg && (
        <FormField
          control={form.control}
          name="name"
          rules={{
            required: 'Name required'
          }}
          render={({ field }) => (
            <FormItem>
              <FormControl>
                <Input placeholder="John" disabled={isPending} {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />
      )}
      <FormField
        control={form.control}
        name="email"
        rules={{
          required: 'Mail is required',
          pattern: {
            value: validEmail,
            message: 'Enter valid email'
          }
        }}
        render={({ field }) => (
          <FormItem>
            <FormControl>
              <Input
                placeholder="jonh@examle.com"
                type="email"
                disabled={isPending}
                {...field}
              />
            </FormControl>
            <FormMessage />
          </FormItem>
        )}
      />
      <FormField
        control={form.control}
        name="password"
        rules={{
          required: 'Password required',
          minLength: {
            value: 6,
            message: 'Minimum 6 characters'
          }
        }}
        render={({ field }) => (
          <FormItem>
            <FormControl>
              <Input
                placeholder="******"
                type="password"
                disabled={isPending}
                {...field}
              />
            </FormControl>
            <FormMessage />
          </FormItem>
        )}
      />
    </>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { Auth } from "./Auth";

export default function AuthPage() {
    return <Auth />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\Social.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { useRouter } from 'next/navigation';
import { FcGoogle } from 'react-icons/fc';

import { Button } from '@/components/layouts/ui/Button';

import { SERVER_URL } from '@/config/api.config';

import styles from './Auth.module.scss';

export function Social() {
  const router = useRouter();

  return (
    <div className={styles.social}>
      <Button
        variant="outline"
        onClick={() => router.push(`${SERVER_URL}/auth/google`)}
      >
        <FcGoogle />
        Continue via Google
      </Button>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\auth\useAuthForm.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation } from '@tanstack/react-query'
import { useRouter } from 'next/navigation'
import { SubmitHandler, useForm } from 'react-hook-form'
import toast from 'react-hot-toast'

import { DASHBOARD_URL } from '@/config/url.config'

import { authService } from '@/services/auth/auth.service'

import { IAuthForm } from '@/shared/types/auth.interface'

export function useAuthForm(isReg: boolean) {
	const router = useRouter()

	const form = useForm<IAuthForm>({
		mode: 'onChange',
		defaultValues: {
			name: '',
			email: '',
			password: '',
		}
	})

	const { mutate, isPending } = useMutation({
		mutationKey: ['auth user'],
		mutationFn: (data: IAuthForm) =>
			authService.main(isReg ? 'register' : 'login', data),
		onSuccess() {
			form.reset()
			toast.success('Successful authorization')
			router.replace(DASHBOARD_URL.home())
		},
		onError(error) {
			if (error.message) {
				toast.error(error.message)
			} else {
				toast.error('Error authorization')
			}
		}
	})

	const onSubmit: SubmitHandler<IAuthForm> = data => {
		mutate(data)
	}

	return { onSubmit, form, isPending }
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\layout.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { StoreLayout } from "@/components/layouts/store-layout/StoreLayout";
import type { PropsWithChildren } from "react";

export default function Layout({ children }: PropsWithChildren<unknown>) {
    return <StoreLayout>{children}</StoreLayout>
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\Store.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\Store.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\Store.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\Store.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\Categories.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\Categories.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\CategoryColumns.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\CategoryColumns.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\CategoryForm.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\CategoryForm.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\create\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\create\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\[categoryId]\CategoryEdit.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\[categoryId]\CategoryEdit.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\[categoryId]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\categories\[categoryId]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\ColorColumns.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\ColorColumns.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\ColorForm.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\ColorForm.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\Colors.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\Colors.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\create\CreateColor.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\create\CreateColor.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\create\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\create\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\[colorId]\ColorEdit.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\[colorId]\ColorEdit.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\[colorId]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\colors\[colorId]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\ProductColumns.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\ProductColumns.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\ProductForm.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\ProductForm.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\Products.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\Products.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\create\CreateProduct.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\create\CreateProduct.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\create\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\create\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\[productId]\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\[productId]\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\[productId]\ProductEdit.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\products\[productId]\ProductEdit.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\ReviewColumns.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\ReviewColumns.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\Reviews.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\reviews\Reviews.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\settings\page.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\settings\page.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\settings\Settings.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\settings\Settings.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatistics.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatistics.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatistics.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatistics.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatisticsItem.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\MainStatisticsItem.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\statisctics.util.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\main-statistics\statisctics.util.ts


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\LastUsers.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\LastUsers.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\MiddleStatistics.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\MiddleStatistics.module.scss


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\MiddleStatistics.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\MiddleStatistics.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\Overview.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
Error: File not found - C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\app\store\[storeId]\statistics\middle-statistics\Overview.tsx


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\MainLayout.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply flex flex-col h-full;

	> .layout {
		@apply flex-1;

		> main {
			@apply mx-5 lg:mx-14;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\MainLayout.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { PropsWithChildren } from 'react'

import styles from './MainLayout.module.scss'
import { Footer } from './footer/Footer'
import { Header } from './header/Header'

export function MainLayout({ children }: PropsWithChildren<unknown>) {
	return (
		<div className={styles.wrapper}>
			<div className={styles.layout}>
				<Header />
				<main>{children}</main>
				<Footer />
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\footer\Footer.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply border-t mt-16;

	> .footer {
		@apply mx-auto py-5 text-center;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\footer\Footer.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import styles from './Footer.module.scss'

export function Footer() {
	return (
		<div className={styles.wrapper}>
			<div className={styles.footer}>
				teashop.com &copy; 2025 All Rights Reserved
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\Header.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.header {
	@apply p-5 gap-x-4 h-full flex items-center bg-white border-b;

	> .search {
		@apply ml-auto hidden w-[40%] lg:block;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\Header.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import styles from './Header.module.scss'
import { HeaderMenu } from './header-menu/HeaderMenu'
import { Logo } from './logo/Logo'
import { SearchInput } from './search-input/SearchInput'

export function Header() {
	return (
		<div className={styles.header}>
			<Logo />
			<div className={styles.search}>
				<SearchInput />
			</div>
			<HeaderMenu />
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\HeaderMenu.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.header_menu {
	@apply hidden items-center gap-x-2 ml-auto lg:flex;

	.avatar {
		@apply rounded-full;
	}

	.icon {
		@apply size-4 mr-2;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\HeaderMenu.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { LogOut } from 'lucide-react';
import Image from 'next/image';
import Link from 'next/link';

import { Button } from '@/components/layouts/ui/Button';
import { Loader } from '@/components/layouts/ui/Loader';
import { CreateStoreModal } from '@/components/layouts/ui/modals/CreateStoreModal';

import { DASHBOARD_URL, PUBLIC_URL, STORE_URL } from '@/config/url.config';

import { useProfile } from '@/hooks/useProfile';

import { HeaderCart } from './header-cart/HeaderCart';
import styles from './HeaderMenu.module.scss';

export function HeaderMenu() {
  const { user, isLoading } = useProfile();

  return (
    <div className={styles.header_menu}>
      <HeaderCart />
      <Link href={PUBLIC_URL.explorer()}>
        <Button variant="ghost">Каталог</Button>
      </Link>
      {isLoading ? (
        <Loader size="sm" />
      ) : user ? (
        <>
          <Link href={DASHBOARD_URL.favorites()}>
            <Button variant="ghost">Избранное</Button>
          </Link>
          {user.stores.length ? (
            <Link href={STORE_URL.home(user.stores[0].id)}>
              <Button variant="ghost">Мои магазины</Button>
            </Link>
          ) : (
            <CreateStoreModal>
              <Button variant="ghost">Создать магазин</Button>
            </CreateStoreModal>
          )}
          <Link href={DASHBOARD_URL.home()}>
            <Image
              src={user.picture}
              alt={user.name}
              width={42}
              height={42}
              className={styles.avatar}
            />
          </Link>
        </>
      ) : (
        <Link href={PUBLIC_URL.auth()}>
          <Button>
            <LogOut className={styles.icon} />
            Войти
          </Button>
        </Link>
      )}
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\header-cart\HeaderCart.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/22/2025 12:21:39
.cart {
	@apply h-full flex flex-col;

	.items {
		@apply flex flex-col w-full flex-1;

		> .item {
			@apply flex items-center mb-5;

			> .image {
				@apply relative h-28 w-28 rounded-md overflow-hidden;

				> img {
					@apply object-cover;
				}
			}

			> .right {
				@apply ml-6;

				> h2 {
					@apply font-medium line-clamp-1;
				}

				> p {
					@apply text-sm text-muted-foreground mt-1;
				}

				.actions {
					@apply flex items-center mt-1;

					input {
						@apply w-10 text-center text-sm;
					}

					button {
						@apply size-7;
						svg {
							@apply size-4;
						}
					}
				}
			}
		}

		> .not_found {
			@apply text-sm text-muted-foreground;
		}
	}

	> .total {
		@apply text-lg font-medium;
	}

	> button {
		@apply w-full;
		@apply flex justify-end;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\header-cart\HeaderCart.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/22/2025 12:20:29
import { useRouter } from 'next/navigation';

import { Button } from '@/components/layouts/ui/Button';
import {
  Sheet,
  SheetContent,
  SheetTitle,
  SheetTrigger
} from '@/components/layouts/ui/Sheet';

import { PUBLIC_URL } from '@/config/url.config';

import { useCart } from '@/hooks/useCart';
import { useProfile } from '@/hooks/useProfile';

import { formatPrice } from '@/utils/string/format-price';

import { CartItem } from './cart-item/CartItem';
import styles from './HeaderCart.module.scss';
import { useCheckout } from './useCheckout';

export function HeaderCart() {
  const router = useRouter();

  const { createPayment, isLoadingCreate } = useCheckout();
  const { user } = useProfile();

  const { items, total } = useCart();

  const handleClick = () => {
    user ? createPayment() : router.push(PUBLIC_URL.auth());
  };

  return (
    <Sheet>
      <SheetTrigger asChild>
        <Button variant="ghost">Cart</Button>
      </SheetTrigger>
      <SheetContent className={styles.cart}>
        <SheetTitle>Products cart</SheetTitle>
        <div className={styles.items}>
          {items.length ? (
            items.map(item => <CartItem item={item} key={item.id} />)
          ) : (
            <div className={styles.not_found}>Cart is empty!</div>
          )}
        </div>
        {items.length ? (
          <>
            <div className={styles.total}>Total: {formatPrice(total)}</div>
            <Button onClick={handleClick} disabled={isLoadingCreate}>
              Checkout
            </Button>
          </>
        ) : null}
      </SheetContent>
    </Sheet>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\header-cart\useCheckout.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
// hooks/useCheckout.ts
import { useMutation } from '@tanstack/react-query';
import { useRouter } from 'next/navigation';
import { useMemo } from 'react';
import toast from 'react-hot-toast';

import { useActions } from '@/hooks/useActions';
import { useCart } from '@/hooks/useCart';

import { orderService } from '@/services/order.service';

export const useCheckout = () => {
  const { items } = useCart();
  const { reset } = useActions();
  const router = useRouter();

  const { mutate: createPayment, isPending: isLoadingCreate } = useMutation({
    mutationKey: ['create order and payment'],
    mutationFn: () =>
      orderService.place({
        items: items.map(item => ({
          price: item.price,
          quantity: item.quantity,
          productId: item.product.id,
          storeId: item.product.storeId
        }))
      }),
    onSuccess({ data }) {
      router.push(data.url);
      reset();
    },
    onError() {
      toast.error('Error while creating payment');
    }
  });

  return useMemo(
    () => ({
      createPayment,
      isLoadingCreate
    }),
    [createPayment, isLoadingCreate]
  );
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\header-cart\cart-item\CartActions.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { Minus, Plus } from 'lucide-react';

import { Button } from '@/components/layouts/ui/Button';

import { useActions } from '@/hooks/useActions';
import { useCart } from '@/hooks/useCart';

import { ICartItem } from '@/shared/types/cart.interface';

import styles from '../HeaderCart.module.scss';

interface CartActionsProps {
  item: ICartItem;
}

export function CartActions({ item }: CartActionsProps) {
  const { changeQuantity } = useActions();

  const { items } = useCart();
  const quantity = items.find(cartItem => cartItem.id === item.id)?.quantity;

  return (
    <div className={styles.actions}>
      <Button
        onClick={() => changeQuantity({ id: item.id, type: 'minus' })}
        variant="ghost"
        size="icon"
        disabled={quantity === 1}
      >
        <Minus />
      </Button>

      <input disabled readOnly value={quantity} />

      <Button
        onClick={() => changeQuantity({ id: item.id, type: 'plus' })}
        variant="ghost"
        size="icon"
      >
        <Plus />
      </Button>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\header-menu\header-cart\cart-item\CartItem.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Image from 'next/image'
import Link from 'next/link'

import { PUBLIC_URL } from '@/config/url.config'

import { ICartItem } from '@/shared/types/cart.interface'

import { formatPrice } from '@/utils/string/format-price'

import styles from '../HeaderCart.module.scss'

import { CartActions } from './CartActions'

interface CartItemProps {
	item: ICartItem
}

export function CartItem({ item }: CartItemProps) {
	return (
		<div className={styles.item}>
			<Link
				href={PUBLIC_URL.product(item.product.id)}
				className={styles.image}
			>
				<Image
					src={item.product.images[0]}
					alt={item.product.title}
					fill
				/>
			</Link>
			<div className={styles.right}>
				<h2>{item.product.title}</h2>
				<p>{formatPrice(item.product.price)}</p>
				<CartActions item={item} />
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\logo\Logo.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.logo {
	@apply flex items-center gap-x-3 hover:opacity-75 transition-opacity;

	> div {
		@apply text-2xl font-bold text-blue-600;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\logo\Logo.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Image from 'next/image'
import Link from 'next/link'

import { PUBLIC_URL } from '@/config/url.config'

import { SITE_NAME } from '@/constants/seo.constants'

import styles from './Logo.module.scss'

export function Logo() {
	return (
		<Link href={PUBLIC_URL.home()} className={styles.logo}>
			<Image
				src='/images/logo.svg'
				alt={SITE_NAME}
				width={35}
				height={35}
			/>
			<div>{SITE_NAME}</div>
		</Link>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\search-input\SearchInput.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.form {
	@apply flex items-center relative;

	input {
		@apply rounded-lg rounded-r-none focus-visible:ring-transparent pr-8;
	}

	button {
		@apply rounded-l-none;

		> svg {
			@apply size-4;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\main-layout\header\search-input\SearchInput.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { Search } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { useState } from 'react';

import { Button } from '@/components/layouts/ui/Button';
import { Input } from '@/components/layouts/ui/form-elements/Input';

import { PUBLIC_URL } from '@/config/url.config';

import styles from './SearchInput.module.scss';

export function SearchInput() {
  const [searchTerm, setSearchTerm] = useState<string>('');

  const router = useRouter();

  return (
    <div className={styles.form}>
      <Input
        placeholder="Search products..."
        value={searchTerm}
        onChange={e => setSearchTerm(e.target.value)}
      />
      <Button
        variant="default"
        onClick={() =>
          router.push(PUBLIC_URL.explorer(`?searchTerm=${searchTerm}`))
        }
      >
        <Search />
      </Button>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\StoreLayout.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply flex flex-col w-full;

	> .layout {
		> .header {
			@apply h-[70px] lg:pl-64 fixed inset-y-0 w-full z-[49];
		}

		> .sidebar {
			@apply hidden lg:flex h-full w-64 flex-col fixed inset-y-0 z-[50];
		}

		> main {
			@apply lg:pl-64 py-[70px] bg-white;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\StoreLayout.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { PropsWithChildren } from 'react'

import styles from './StoreLayout.module.scss'
import { Header } from './header/Header'
import { Sidebar } from './sidebar/Sidebar'

export function StoreLayout({ children }: PropsWithChildren<unknown>) {
	return (
		<div className={styles.wrapper}>
			<div className={styles.layout}>
				<div className={styles.sidebar}>
					<Sidebar />
				</div>
				<div className={styles.header}>
					<Header />
				</div>
				<main>{children}</main>
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\header\Header.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.header {
	@apply p-6 gap-x-4 h-full flex items-center bg-white border-b;

	> .header_menu {
		@apply flex items-center gap-x-4 ml-auto;

		img {
			@apply rounded-full;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\header\Header.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import Image from 'next/image';
import Link from 'next/link';

import { Loader } from '@/components/layouts/ui/Loader';

import { DASHBOARD_URL } from '@/config/url.config';

import { useProfile } from '@/hooks/useProfile';

import { MobileSidebar } from '../sidebar/MobileSidebar';

import styles from './Header.module.scss';
import { StoreSwitcher } from './StoreSwitcher';

export function Header() {
  const { user, isLoading } = useProfile();

  return (
    <div className={styles.header}>
      <MobileSidebar />
      <div className={styles.header_menu}>
        {isLoading ? (
          <Loader size="sm" />
        ) : (
          user && (
            <>
              <StoreSwitcher items={user.stores} />
              <Link href={DASHBOARD_URL.home()}>
                <Image
                  src={user.picture}
                  alt={user.name}
                  width={42}
                  height={42}
                />
              </Link>
            </>
          )
        )}
      </div>
    </div>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\header\StoreSwitcher.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { CommandSeparator } from 'cmdk';
import { ChevronsUpDown, Plus, StoreIcon } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { useState } from 'react';

import { Button } from '@/components/layouts/ui/Button';
import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList
} from '@/components/layouts/ui/Command';
import { CreateStoreModal } from '@/components/layouts/ui/modals/CreateStoreModal';
import {
  Popover,
  PopoverContent,
  PopoverTrigger
} from '@/components/layouts/ui/Popover';

import { STORE_URL } from '@/config/url.config';

import { IStore } from '@/shared/types/store.interface';

interface StoreSwitcherProps {
  items: IStore[];
}

export function StoreSwitcher({ items }: StoreSwitcherProps) {
  const router = useRouter();

  const [isOpen, setIsOpen] = useState(false);

  const onStoreSelect = (storeId: string) => {
    setIsOpen(false);
    router.push(STORE_URL.home(storeId));
  };

  return (
    <Popover open={isOpen} onOpenChange={setIsOpen}>
      <PopoverTrigger asChild>
        <Button
          variant="outline"
          size="sm"
          role="combobox"
          aria-expanded={isOpen}
          aria-label="Select store"
          className="w-52"
        >
          <StoreIcon className="mr-2 size-4" />
          Current store
          <ChevronsUpDown className="ml-auto size-4 shrink-0 opacity-50" />
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-52 p-0">
        <Command>
          <CommandList>
            <CommandInput placeholder="Search store..." />
            <CommandEmpty>No store found.</CommandEmpty>
            <CommandGroup heading="Stores">
              {items.map(store => (
                <CommandItem
                  key={store.id}
                  onSelect={() => onStoreSelect(store.id)}
                  className="text-sm"
                >
                  <StoreIcon className="mr-2 size-4" />
                  <div className="line-clamp-1">{store.title}</div>
                </CommandItem>
              ))}
            </CommandGroup>
          </CommandList>
          <CommandSeparator />
          <CommandList>
            <CommandGroup>
              <CreateStoreModal>
                <CommandItem>
                  <Plus className="size-4 mr-2" />
                  Create store
                </CommandItem>
              </CreateStoreModal>
            </CommandGroup>
          </CommandList>
        </Command>
      </PopoverContent>
    </Popover>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\MobileSidebar.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { Menu } from 'lucide-react';

import {
  Sheet,
  SheetContent,
  SheetTrigger
} from '@/components/layouts/ui/Sheet';

import { Sidebar } from './Sidebar';

export function MobileSidebar() {
  return (
    <Sheet>
      <SheetTrigger className="lg:hidden pr-4 hover:opacity-75 transition">
        <Menu />
      </SheetTrigger>
      <SheetContent side="left" className="p-0 bg-white">
        <Sidebar />
      </SheetContent>
    </Sheet>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\Sidebar.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.sidebar {
	@apply h-full flex flex-col bg-neutral-50 border-r overflow-y-auto pt-4 px-5 my-1;
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\Sidebar.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { Logo } from '../../main-layout/header/logo/Logo'

import styles from './Sidebar.module.scss'
import { Navigation } from './navigation/Navigation'

export function Sidebar() {
	return (
		<div className={styles.sidebar}>
			<Logo />
			<Navigation />
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\navigation\menu.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { LucideIcon } from 'lucide-react'

export interface IMenuItem {
	icon: LucideIcon
	value: string
	link: string
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\navigation\menu.interface.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { LucideIcon } from 'lucide-react'

export interface IMenuItem {
	icon: LucideIcon
	value: string
	link: string
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\navigation\MenuItem.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client'

import Link from 'next/link'
import { usePathname } from 'next/navigation'

import { cn } from '@/utils/clsx'

import styles from './Navigation.module.scss'
import { IMenuItem } from './menu.interface'

interface MenuItemProps {
	route: IMenuItem
}

export function MenuItem({ route }: MenuItemProps) {
	const pathname = usePathname()

	return (
		<Link
			href={route.link}
			className={cn(styles.route, {
				[styles.active]: pathname === route.link
			})}
		>
			<route.icon />
			{route.value}
		</Link>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\navigation\Navigation.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	@apply flex flex-col w-full flex-1 mt-6;

	> .navigation {
		@apply flex flex-col w-full space-y-3;

		.route {
			@apply flex items-center gap-x-3 text-slate-500 text-sm font-medium py-2.5 px-3 rounded-lg hover:bg-blue-200/20 hover:text-blue-500 hover:drop-shadow-sm bg-transparent transition-all duration-200;

			> svg {
				@apply size-5;
			}

			&.active {
				@apply text-sm text-blue-500 bg-blue-200/20 hover:bg-blue-200/20 hover:text-blue-500;
			}
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\store-layout\sidebar\navigation\Navigation.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client'

import {
	Album,
	BarChart,
	FolderKanban,
	PaintBucket,
	Settings,
	Star
} from 'lucide-react'
import { useParams } from 'next/navigation'

import { STORE_URL } from '@/config/url.config'

import { MenuItem } from './MenuItem'
import styles from './Navigation.module.scss'
import { IMenuItem } from './menu.interface'

export function Navigation() {
	const params = useParams<{ storeId: string }>()

	const routes: IMenuItem[] = [
		{
			icon: BarChart,
			link: STORE_URL.home(params.storeId),
			value: 'Statistics'
		},
		{
			icon: FolderKanban,
			link: STORE_URL.products(params.storeId),
			value: 'Products'
		},
		{
			icon: Album,
			link: STORE_URL.categories(params.storeId),
			value: 'Categories'
		},
		{
			icon: PaintBucket,
			link: STORE_URL.colors(params.storeId),
			value: 'Colors'
		},
		{
			icon: Star,
			link: STORE_URL.reviews(params.storeId),
			value: 'Reviews'
		},
		{
			icon: Settings,
			link: STORE_URL.settings(params.storeId),
			value: 'Store Settings'
		}
	]

	return (
		<div className={styles.wrapper}>
			<div className={styles.navigation}>
				{routes.map(route => (
					<MenuItem key={route.value} route={route} />
				))}
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\AlertDialog.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "./Button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold", className)}
    {...props}
  />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
AlertDialogDescription.displayName =
  AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action
    ref={ref}
    className={cn(buttonVariants(), className)}
    {...props}
  />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel
    ref={ref}
    className={cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    )}
    {...props}
  />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
  AlertDialog,
  AlertDialogPortal,
  AlertDialogOverlay,
  AlertDialogTrigger,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogAction,
  AlertDialogCancel,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Button.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Card.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Chart.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as RechartsPrimitive from "recharts"

import { cn } from "@/lib/utils"

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  )
}

type ChartContextProps = {
  config: ChartConfig
}

const ChartContext = React.createContext<ChartContextProps | null>(null)

function useChart() {
  const context = React.useContext(ChartContext)

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />")
  }

  return context
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig
    children: React.ComponentProps<
      typeof RechartsPrimitive.ResponsiveContainer
    >["children"]
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId()
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>
          {children}
        </RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(
    ([, config]) => config.theme || config.color
  )

  if (!colorConfig.length) {
    return null
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color =
      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
      itemConfig.color
    return color ? `  --color-${key}: ${color};` : null
  })
  .join("\n")}
}
`
          )
          .join("\n"),
      }}
    />
  )
}

const ChartTooltip = RechartsPrimitive.Tooltip

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean
      hideIndicator?: boolean
      indicator?: "line" | "dot" | "dashed"
      nameKey?: string
      labelKey?: string
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref
  ) => {
    const { config } = useChart()

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null
      }

      const [item] = payload
      const key = `${labelKey || item.dataKey || item.name || "value"}`
      const itemConfig = getPayloadConfigFromPayload(config, item, key)
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>
            {labelFormatter(value, payload)}
          </div>
        )
      }

      if (!value) {
        return null
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>
    }, [
      label,
      labelFormatter,
      payload,
      hideLabel,
      labelClassName,
      config,
      labelKey,
    ])

    if (!active || !payload?.length) {
      return null
    }

    const nestLabel = payload.length === 1 && indicator !== "dot"

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`
            const itemConfig = getPayloadConfigFromPayload(config, item, key)
            const indicatorColor = color || item.payload.fill || item.color

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center"
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            }
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center"
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {item.value && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </div>
      </div>
    )
  }
)
ChartTooltipContent.displayName = "ChartTooltip"

const ChartLegend = RechartsPrimitive.Legend

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean
      nameKey?: string
    }
>(
  (
    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
    ref
  ) => {
    const { config } = useChart()

    if (!payload?.length) {
      return null
    }

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center justify-center gap-4",
          verticalAlign === "top" ? "pb-3" : "pt-3",
          className
        )}
      >
        {payload.map((item) => {
          const key = `${nameKey || item.dataKey || "value"}`
          const itemConfig = getPayloadConfigFromPayload(config, item, key)

          return (
            <div
              key={item.value}
              className={cn(
                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
              )}
            >
              {itemConfig?.icon && !hideIcon ? (
                <itemConfig.icon />
              ) : (
                <div
                  className="h-2 w-2 shrink-0 rounded-[2px]"
                  style={{
                    backgroundColor: item.color,
                  }}
                />
              )}
              {itemConfig?.label}
            </div>
          )
        })}
      </div>
    )
  }
)
ChartLegendContent.displayName = "ChartLegend"

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(
  config: ChartConfig,
  payload: unknown,
  key: string
) {
  if (typeof payload !== "object" || payload === null) {
    return undefined
  }

  const payloadPayload =
    "payload" in payload &&
    typeof payload.payload === "object" &&
    payload.payload !== null
      ? payload.payload
      : undefined

  let configLabelKey: string = key

  if (
    key in payload &&
    typeof payload[key as keyof typeof payload] === "string"
  ) {
    configLabelKey = payload[key as keyof typeof payload] as string
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[
      key as keyof typeof payloadPayload
    ] as string
  }

  return configLabelKey in config
    ? config[configLabelKey]
    : config[key as keyof typeof config]
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Command.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client';

import { type DialogProps } from '@radix-ui/react-dialog';
import { Command as CommandPrimitive } from 'cmdk';
import { Search } from 'lucide-react';
import * as React from 'react';

import { Dialog, DialogContent } from './Dialog';
import { cn } from '@/lib/utils';

const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive
    ref={ref}
    className={cn(
      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',
      className
    )}
    {...props}
  />
));
Command.displayName = CommandPrimitive.displayName;

const CommandDialog = ({ children, ...props }: DialogProps) => {
  return (
    <Dialog {...props}>
      <DialogContent asChild className="overflow-hidden p-0 shadow-lg">
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  );
};

const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
    <Search className="mr-2 h-4 w-4 shrink-0 opacity-50" />
    <CommandPrimitive.Input
      ref={ref}
      className={cn(
        'flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',
        className
      )}
      value=""
      {...props}
    />
  </div>
));

CommandInput.displayName = CommandPrimitive.Input.displayName;

const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List
    ref={ref}
    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}
    {...props}
  />
));

CommandList.displayName = CommandPrimitive.List.displayName;

const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => (
  <CommandPrimitive.Empty
    ref={ref}
    className="py-6 text-center text-sm"
    {...props}
  />
));

CommandEmpty.displayName = CommandPrimitive.Empty.displayName;

const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group
    ref={ref}
    className={cn(
      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',
      className
    )}
    {...props}
  />
));

CommandGroup.displayName = CommandPrimitive.Group.displayName;

const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator
    ref={ref}
    className={cn('-mx-1 h-px bg-border', className)}
    {...props}
  />
));
CommandSeparator.displayName = CommandPrimitive.Separator.displayName;

const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      className
    )}
    {...props}
  />
));

CommandItem.displayName = CommandPrimitive.Item.displayName;

const CommandShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        'ml-auto text-xs tracking-widest text-muted-foreground',
        className
      )}
      {...props}
    />
  );
};
CommandShortcut.displayName = 'CommandShortcut';

export {
  Command,
  CommandDialog,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
  CommandSeparator,
  CommandShortcut
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Dialog.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\DropdownMenu.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Heading.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { cn } from '@/utils/clsx'

interface HeadingProps {
	title: string
	description?: string
	className?: string
}

export function Heading({ title, description, className }: HeadingProps) {
	return (
		<div className='space-y-1'>
			<h2 className={cn('text-2xl font-medium', className)}>{title}</h2>
			{description && (
				<p className='text-sm text-muted-foreground'>{description}</p>
			)}
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Loader.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { type VariantProps, cva } from 'class-variance-authority'
import { LoaderCircle } from 'lucide-react'

import { cn } from '@/utils/clsx'

const iconVariants = cva('animate-spin text-muted-foreground', {
	variants: {
		size: {
			default: 'size-9',
			sm: 'size-6'
		}
	},
	defaultVariants: {
		size: 'default'
	}
})

type TypeIconVariants = VariantProps<typeof iconVariants>

export const Loader = ({ size }: TypeIconVariants) => {
	return <LoaderCircle className={cn(iconVariants({ size }))} />
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Popover.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

const Popover = PopoverPrimitive.Root

const PopoverTrigger = PopoverPrimitive.Trigger

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

export { Popover, PopoverTrigger, PopoverContent }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Select.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>

    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Sheet.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Skeleton.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-muted", className)}
      {...props}
    />
  )
}

export { Skeleton }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Table.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import * as React from "react"

import { cn } from "@/lib/utils"

const Table = React.forwardRef<
  HTMLTableElement,
  React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
  <div className="relative w-full overflow-auto">
    <table
      ref={ref}
      className={cn("w-full caption-bottom text-sm", className)}
      {...props}
    />
  </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tbody
    ref={ref}
    className={cn("[&_tr:last-child]:border-0", className)}
    {...props}
  />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tfoot
    ref={ref}
    className={cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    )}
    {...props}
  />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
  HTMLTableRowElement,
  React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
  <tr
    ref={ref}
    className={cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    )}
    {...props}
  />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
  HTMLTableCellElement,
  React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <th
    ref={ref}
    className={cn(
      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
      className
    )}
    {...props}
  />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
  HTMLTableCellElement,
  React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <td
    ref={ref}
    className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
    {...props}
  />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
  HTMLTableCaptionElement,
  React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
  <caption
    ref={ref}
    className={cn("mt-4 text-sm text-muted-foreground", className)}
    {...props}
  />
))
TableCaption.displayName = "TableCaption"

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\Textarea.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[100px] max-h-[250px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\catalog\catalog.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { IProduct } from '@/shared/types/product.interface'

export interface ICatalog {
	title: string
	description?: string
	linkTitle?: string
	link?: string
	products: IProduct[]
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\catalog\Catalog.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.wrapper {
	.header {
		@apply md:flex md:items-center md:justify-between mb-4;

		> .info {
			@apply max-w-2xl px-4 lg:max-w-full lg:px-0;

			> h1 {
				@apply text-2xl font-bold;
			}

			> p {
				@apply mt-2 text-sm text-muted-foreground;
			}
		}

		> a {
			@apply hidden text-sm font-medium text-blue-600 hover:text-blue-600/90 md:flex;
		}
	}

	.catalog {
		@apply flex items-center w-full;

		> .products {
			@apply mt-2 w-full grid sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 2xl:grid-cols-6 gap-8;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\catalog\Catalog.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Link from 'next/link'

import styles from './Catalog.module.scss'
import { ICatalog } from './catalog.interface'
import { ProductCard } from './product-card/ProductCard'


export function Catalog({
	title,
	description,
	linkTitle,
	link,
	products
}: ICatalog) {
	return (
		<div className={styles.wrapper}>
			<div className={styles.header}>
				<div className={styles.info}>
					<h1>{title}</h1>
					{description && <p>{description}</p>}
				</div>
				{link && linkTitle && <Link href={link}>{linkTitle}</Link>}
			</div>

			<div className={styles.catalog}>
				<div className={styles.products}>
					{products.length ? ( 
						products.map(product => (
							<ProductCard key={product.id} product={product} /> 
						))
					) : (
						<div>Nothing found</div>
					)}
				</div>
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\catalog\product-card\ProductCard.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.card {
	@apply bg-white;

	img {
		@apply rounded-lg;
	}

	> .title {
		@apply mt-4 font-semibold text-gray-700 line-clamp-1;
	}

	> .category {
		@apply mt-1 text-sm text-gray-500;
	}

	> .price {
		@apply mt-1 font-medium text-sm text-gray-900;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\catalog\product-card\ProductCard.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Image from 'next/image'
import Link from 'next/link'

import { PUBLIC_URL } from '@/config/url.config'

import { IProduct } from '@/shared/types/product.interface'

import { formatPrice } from '@/utils/string/format-price'

import styles from './ProductCard.module.scss'
import { SERVER_URL } from '@/config/api.config'

interface ProductCardProps {
	product: IProduct
}

export function ProductCard({ product }: ProductCardProps) {
	return (
		<div className={styles.card}>
			<Link href={PUBLIC_URL.product(product.id)}>
				<Image
					src={`${SERVER_URL}${product.images[0]}`}
					alt={product.title}
					width={300}
					height={300}
				/>
			</Link>

			<h3 className={styles.title}>{product.title}</h3>
			<Link
				href={PUBLIC_URL.category(product.category.id)}
				className={styles.category}
			>
				{product.category.title}
			</Link>
			<p className={styles.price}>{formatPrice(product.price)}</p>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\data-table\DataTable.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.search {
	@apply flex items-center py-4;
}

.table {
	@apply rounded-md border;
}

.loading {
	@apply max-w-screen-2xl mx-auto w-full;

	> .heading {
		@apply h-8 w-48;
	}

	> .search {
		@apply h-8 w-72 mt-6;
	}

	> .table {
		@apply mt-6;

		.loader_wrapper {
			@apply h-[520px] w-full flex items-center justify-center;
		}
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\data-table\DataTable.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
'use client'

import {
	ColumnDef,
	ColumnFiltersState,
	SortingState,
	flexRender,
	getCoreRowModel,
	getFilteredRowModel,
	getSortedRowModel,
	useReactTable
} from '@tanstack/react-table'
import { useState } from 'react'

import {
	Table,
	TableBody,
	TableCell,
	TableHead,
	TableHeader,
	TableRow
} from '../Table'
import { Input } from '../form-elements/Input'

import styles from './DataTable.module.scss'

interface DataTableProps<TData, TValue> {
	columns: ColumnDef<TData, TValue>[]
	data: TData[]
	filterKey?: string
}

export function DataTable<TData, TValue>({
	columns,
	data,
	filterKey
}: DataTableProps<TData, TValue>) {
	const [sorting, setSorting] = useState<SortingState>([])
	const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])

	const table = useReactTable({
		data,
		columns,
		getCoreRowModel: getCoreRowModel(),
		onSortingChange: setSorting,
		getSortedRowModel: getSortedRowModel(),
		onColumnFiltersChange: setColumnFilters,
		getFilteredRowModel: getFilteredRowModel(),
		state: {
			sorting,
			columnFilters
		}
	})

	return (
		<div>
			{filterKey && (
				<div className={styles.search}>
					<Input
						placeholder='Search'
						value={
							(table
								.getColumn(filterKey)
								?.getFilterValue() as string) ?? ''
						}
						onChange={event =>
							table
								.getColumn(filterKey)
								?.setFilterValue(event.target.value)
						}
						className='max-w-sm'
					/>
				</div>
			)}
			<div className={styles.table}>
				<Table>
					<TableHeader>
						{table.getHeaderGroups().map(headerGroup => (
							<TableRow key={headerGroup.id}>
								{headerGroup.headers.map(header => {
									return (
										<TableHead key={header.id}>
											{header.isPlaceholder
												? null
												: flexRender(
														header.column.columnDef
															.header,
														header.getContext()
													)}
										</TableHead>
									)
								})}
							</TableRow>
						))}
					</TableHeader>
					<TableBody>
						{table.getRowModel().rows?.length ? (
							table.getRowModel().rows.map(row => (
								<TableRow
									key={row.id}
									data-state={
										row.getIsSelected() && 'selected'
									}
								>
									{row.getVisibleCells().map(cell => (
										<TableCell key={cell.id}>
											{flexRender(
												cell.column.columnDef.cell,
												cell.getContext()
											)}
										</TableCell>
									))}
								</TableRow>
							))
						) : (
							<TableRow>
								<TableCell
									colSpan={columns.length}
									className='h-24 text-center'
								>
								    No results.
								</TableCell>
							</TableRow>
						)}
					</TableBody>
				</Table>
			</div>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\data-table\DataTableLoading.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { FC } from 'react'

import { Card, CardContent } from '../Card'
import { Loader } from '../Loader'
import { Skeleton } from '../Skeleton'

import styles from './DataTable.module.scss'

const DataTableLoading: FC = () => {
	return (
		<div className={styles.loading}>
			<Skeleton className={styles.heading} />
			<Skeleton className={styles.search} />
			<Card className={styles.table}>
				<CardContent>
					<div className={styles.loader_wrapper}>
						<Loader />
					</div>
				</CardContent>
			</Card>
		</div>
	)
}

export default DataTableLoading


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\Form.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  ControllerProps,
  FieldPath,
  FieldValues,
  FormProvider,
  useFormContext,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "./Label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message) : children

  if (!body) {
    return null
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\Input.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        value=''
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\Label.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\image-upload\ImageUpload.module.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
.image_container {
	@apply grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-3 xl:grid-cols-6 gap-5;

	> .image_wrapper {
		@apply relative w-[200px] h-[200px] rounded-md overflow-hidden;

		> img {
			@apply object-cover;
		}
	}
}

.upload {
	> svg {
		@apply size-4 mr-2;
	}
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\image-upload\ImageUpload.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { ImagePlus } from 'lucide-react'
import Image from 'next/image'

import { cn } from '@/utils/clsx'

import { Button } from '../../Button'

import styles from './ImageUpload.module.scss'
import { useUpload } from './useUpload'

interface ImageUploadProps {
	isDisabled: boolean
	onChange: (value: string[]) => void
	value: string[]
}

export function ImageUpload({ isDisabled, onChange, value }: ImageUploadProps) {
	const { handleButtonClick, isUploading, fileInputRef, handleFileChange } =
		useUpload(onChange)

	return (
		<div>
			<div className={styles.image_container}>
				{value.map(url => (
					<div key={url} className={styles.image_wrapper}>
						<Image src={`http://localhost:1337${url}`} alt='Image' fill />
					</div>
				))}
			</div>
			<Button
				type='button'
				disabled={isDisabled || isUploading}
				variant='secondary'
				onClick={handleButtonClick}
				className={cn(styles.upload, {
					'mt-4': value.length
				})}
			>
				<ImagePlus />
				Загрузить картинки
			</Button>
			<input
				type='file'
				multiple
				className='hidden'
				ref={fileInputRef}
				onChange={handleFileChange}
				disabled={isDisabled}
			/>
		</div>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\form-elements\image-upload\useUpload.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation } from '@tanstack/react-query'
import { ChangeEvent, useMemo, useRef } from 'react'
import toast from 'react-hot-toast'

import { fileService } from '@/services/file.service'

export function useUpload(onChange: (value: string[]) => void) {
	const fileInputRef = useRef<HTMLInputElement>(null)

	const { mutate: uploadFiles, isPending: isUploading } = useMutation({
		mutationKey: ['upload files'],
		mutationFn: (formData: FormData) => fileService.upload(formData),
		onSuccess(data) {
			onChange(data.map(file => file.url))
		},
		onError() {
			toast.error('Error uploading files')
		}
	})

	const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {
		const selectedFiles = event.target.files

		if (selectedFiles) {
			const fileArray = Array.from(selectedFiles)

			const formData = new FormData()
			fileArray.forEach(file => formData.append('files', file))

			uploadFiles(formData)
		}
	}

	const handleButtonClick = () => {
		fileInputRef.current?.click()
	}

	return useMemo(
		() => ({
			handleButtonClick,
			isUploading,
			fileInputRef,
			handleFileChange
		}),
		[handleButtonClick, isUploading, fileInputRef, handleFileChange]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\modals\ConfirmModal.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { PropsWithChildren } from 'react'

import {
	AlertDialog,
	AlertDialogAction,
	AlertDialogCancel,
	AlertDialogContent,
	AlertDialogDescription,
	AlertDialogFooter,
	AlertDialogHeader,
	AlertDialogTitle,
	AlertDialogTrigger
} from '../AlertDialog'

interface ConfirmModalProps {
	handleClick: () => void
}

export function ConfirmModal({
	children,
	handleClick
}: PropsWithChildren<ConfirmModalProps>) {
	return (
		<AlertDialog>
			<AlertDialogTrigger asChild>{children}</AlertDialogTrigger>
			<AlertDialogContent>
				<AlertDialogHeader>
					<AlertDialogTitle>Are you sure?</AlertDialogTitle>
					<AlertDialogDescription>
						This action cannot be undone.
					</AlertDialogDescription>
				</AlertDialogHeader>
				<AlertDialogFooter>
					<AlertDialogCancel>Close</AlertDialogCancel>
					<AlertDialogAction
						className='bg-blue-500 hover:bg-blue-500/90'
						onClick={() => handleClick()}
					>
						Confirm
					</AlertDialogAction>
				</AlertDialogFooter>
			</AlertDialogContent>
		</AlertDialog>
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\modals\CreateStoreModal.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { type PropsWithChildren, useState } from 'react';
import { SubmitHandler, useForm } from 'react-hook-form';

import { useCreateStore } from '@/hooks/queries/stores/useCreateStore';

import { IStoreCreate } from '@/shared/types/store.interface';

import { Button } from '../Button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger
} from '../Dialog';
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage
} from '../form-elements/Form';
import { Input } from '../form-elements/Input';

export function CreateStoreModal({ children }: PropsWithChildren<unknown>) {
  const [isOpen, setIsOpen] = useState(false);

  const { createStore, isLoadingCreate } = useCreateStore();

  const form = useForm<IStoreCreate>({
    mode: 'onChange',
    defaultValues: {
      title: ''
    }
  });

  const onSubmit: SubmitHandler<IStoreCreate> = data => {
    createStore(data);
    setIsOpen(false);
  };

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild className="w-full">
        {children}
      </DialogTrigger>
      <DialogContent>
        <DialogHeader>
          <DialogTitle>Create store</DialogTitle>
          <DialogDescription>
            For creating a store, you need to specify a name.
          </DialogDescription>
        </DialogHeader>
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
            <FormField
              control={form.control}
              name={'title'}
              rules={{
                required: 'Name required'
              }}
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Name</FormLabel>
                  <FormControl>
                    <Input
                      placeholder="Store Name"
                      disabled={isLoadingCreate}
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <div className="flex justify-end">
              <Button variant="outline" disabled={isLoadingCreate}>
                Create
              </Button>
            </div>
          </form>
        </Form>
      </DialogContent>
    </Dialog>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\components\layouts\ui\modals\ReviewModal.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { PropsWithChildren, useState } from 'react';
import { SubmitHandler, useForm } from 'react-hook-form';
import { Rating } from 'react-simple-star-rating';

import { useCreateReview } from '@/hooks/queries/reviews/useCreateReview';

import { IReviewInput } from '@/shared/types/review.interface';

import { Button } from '../Button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger
} from '../Dialog';
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage
} from '../form-elements/Form';
import { Textarea } from '../Textarea';

interface ReviewModalProps {
  storeId: string;
}

export function ReviewModal({
  children,
  storeId
}: PropsWithChildren<ReviewModalProps>) {
  const [isOpen, setIsOpen] = useState(false);

  const form = useForm<IReviewInput>({
    mode: 'onChange'
  });

  const { createReview, isLoadingCreate } = useCreateReview(storeId);

  const onSubmit: SubmitHandler<IReviewInput> = data => {
    createReview(data);
    form.reset();
    setIsOpen(false);
  };

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>{children}</DialogTrigger>
      <DialogContent>
        <DialogHeader>
          <DialogTitle>Create review</DialogTitle>
          <DialogDescription>
            For creating a review, you need to specify a rating and text
          </DialogDescription>
        </DialogHeader>
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
            <FormField
              control={form.control}
              name="rating"
              rules={{
                required: 'Rating is required'
              }}
              render={({ field }) => (
                <FormItem>
                  <FormControl>
                    <Rating
                      onClick={field.onChange}
                      initialValue={field.value}
                      SVGstyle={{
                        display: 'inline-block'
                      }}
                      size={20}
                      transition
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="text"
              rules={{
                required: 'Text is required'
              }}
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Text</FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      placeholder="Review text"
                      disabled={isLoadingCreate}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            <div className="flex justify-end">
              <Button variant="default" disabled={isLoadingCreate}>
                Add
              </Button>
            </div>
          </form>
        </Form>
      </DialogContent>
    </Dialog>
  );
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\config\api.config.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const SERVER_URL = process.env.SERVER_URL as string;

export const API_URL = {
  root: (url = '') => `${url ? url : ''}`,

  auth: (url = '') => API_URL.root(`/auth/${url}`),
  users: (url = '') => API_URL.root(`/users/${url}`),
  stores: (url = '') => API_URL.root(`/stores/${url}`),
  categories: (url = '') => API_URL.root(`/categories/${url}`),
  products: (url = '') => API_URL.root(`/products/${url}`),
  reviews: (url = '') => API_URL.root(`/reviews/${url}`),
  colors: (url = '') => API_URL.root(`/colors/${url}`),
  orders: (url = '') => API_URL.root(`/orders/${url}`),
  statistics: (url = '') => API_URL.root(`/statistics/${url}`),
  files: (url = '') => API_URL.root(`/files/upload/${url}`)
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\config\url.config.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const APP_URL = process.env.APP_URL as string;

export const PUBLIC_URL = {
  root: (url = '') => `${url ? url : ''}`,

  home: () => PUBLIC_URL.root('/'),
  auth: () => PUBLIC_URL.root('/auth'),
  explorer: (query = '') => PUBLIC_URL.root(`/explorer${query}`),
  product: (id = '') => PUBLIC_URL.root(`/product/${id}`),
  category: (id = '') => PUBLIC_URL.root(`/category/${id}`)
};

export const DASHBOARD_URL = {
  root: (url = '') => `/dashboard${url ? url : ''}`,

  home: () => DASHBOARD_URL.root('/'),
  favorites: () => DASHBOARD_URL.root('/favorites')
};

export const STORE_URL = {
  root: (url = '') => `/store${url ? url : ''}`,

  home: (storeId = '') => STORE_URL.root(`/${storeId}`),

  products: (storeId = '') => STORE_URL.root(`/${storeId}/products`),
  productCreate: (storeId = '') =>
    STORE_URL.root(`/${storeId}/products/create`),
  productEdit: (storeId = '', id = '') =>
    STORE_URL.root(`/${storeId}/products/${id}`),

  categories: (storeId = '') => STORE_URL.root(`/${storeId}/categories`),
  categoryCreate: (storeId = '') =>
    STORE_URL.root(`/${storeId}/categories/create`),
  categoryEdit: (storeId = '', id = '') =>
    STORE_URL.root(`/${storeId}/categories/${id}`),

  colors: (storeId = '') => STORE_URL.root(`/${storeId}/colors`),
  colorCreate: (storeId = '') => STORE_URL.root(`/${storeId}/colors/create`),
  colorEdit: (storeId = '', id = '') =>
    STORE_URL.root(`/${storeId}/colors/${id}`),

  reviews: (storeId = '') => STORE_URL.root(`/${storeId}/reviews`),

  settings: (storeId = '') => STORE_URL.root(`/${storeId}/settings`)
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\constants\seo.constants.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const NO_INDEX_PAGE = { robots: {index: false, follow: false} }

export const SITE_NAME = 'Shop'
export const SITE_DESCRIPTION = 'Welcome to Shop, your one-stop destination for all your shopping needs. Discover a wide range of products and enjoy a seamless shopping experience with us.'


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\useActions.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { bindActionCreators } from '@reduxjs/toolkit'
import { useMemo } from 'react'
import { useDispatch } from 'react-redux'

import { rootActions } from '@/store/root-actions'

export const useActions = () => {
	const dispatch = useDispatch()

	return useMemo(() => bindActionCreators(rootActions, dispatch), [dispatch])
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\useCart.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useTypedSelector } from './useTypedSelector'

export const useCart = () => {
	const items = useTypedSelector(state => state.cart.items)

	const total = items.reduce(
		(acc, item) => acc + item.price * item.quantity,
		0
	)

	return { items, total }
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\useProfile.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query';

import { userService } from '@/services/user.service';

export function useProfile() {
  const { data: user, isLoading } = useQuery({
    queryKey: ['profile'],
    queryFn: () => userService.getProfile(),
    enabled: true
  });

  return { user, isLoading };
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\useTypedSelector.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { TypedUseSelectorHook, useSelector } from 'react-redux'

import { TypeRootState } from '@/store/store'

export const useTypedSelector: TypedUseSelectorHook<TypeRootState> = useSelector


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\categories\useCreateCategory.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { categoryService } from '@/services/category.service'

import { ICategoryInput } from '@/shared/types/category.interface'

export const useCreateCategory = () => {
	const params = useParams<{ storeId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: createCategory, isPending: isLoadingCreate } = useMutation({
		mutationKey: ['create category'],
		mutationFn: (data: ICategoryInput) =>
			categoryService.create(data, params.storeId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get categories for store dashboard']
			})
			toast.success('Category created')
			router.push(STORE_URL.categories(params.storeId))
		},
		onError() {
			toast.error('Error creating category')
		}
	})

	return useMemo(
		() => ({
			createCategory,
			isLoadingCreate
		}),
		[createCategory, isLoadingCreate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\categories\useDeleteCategory.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { categoryService } from '@/services/category.service'

export const useDeleteCategory = () => {
	const params = useParams<{ storeId: string; categoryId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: deleteCategory, isPending: isLoadingDelete } = useMutation({
		mutationKey: ['delete category'],
		mutationFn: () => categoryService.delete(params.categoryId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get categories for store dashboard']
			})
			toast.success('Category deleted')
			router.push(STORE_URL.categories(params.storeId))
		},
		onError() {
			toast.error('Error deleting category')
		}
	})

	return useMemo(
		() => ({ deleteCategory, isLoadingDelete }),
		[deleteCategory, isLoadingDelete]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\categories\useGetCategories.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'

import { categoryService } from '@/services/category.service'

export const useGetCategories = () => {
	const params = useParams<{ storeId: string }>()

	const { data: categories, isLoading } = useQuery({
		queryKey: ['get categories for store dashboard'],
		queryFn: () => categoryService.getByStoreId(params.storeId)
	})

	return useMemo(
		() => ({
			categories,
			isLoading
		}),
		[categories, isLoading]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\categories\useUpdateCategory.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { categoryService } from '@/services/category.service'

import { ICategoryInput } from '@/shared/types/category.interface'

export const useUpdateCategory = () => {
	const params = useParams<{ categoryId: string }>()
	const queryClient = useQueryClient()

	const { mutate: updateCategory, isPending: isLoadingUpdate } = useMutation({
		mutationKey: ['update category'],
		mutationFn: (data: ICategoryInput) =>
			categoryService.update(params.categoryId, data),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get categories for store dashboard']
			})
			toast.success('Category updated')
		},
		onError() {
			toast.error('Error updating category')
		}
	})

	return useMemo(
		() => ({ updateCategory, isLoadingUpdate }),
		[updateCategory, isLoadingUpdate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\colors\useCreateColor.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { colorService } from '@/services/color.service'

import { IColorInput } from '@/shared/types/color.interface'

export const useCreateColor = () => {
	const params = useParams<{ storeId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: createColor, isPending: isLoadingCreate } = useMutation({
		mutationKey: ['create color'],
		mutationFn: (data: IColorInput) =>
			colorService.create(data, params.storeId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get colors for store dashboard']
			})
			toast.success('Color created')
			router.push(STORE_URL.colors(params.storeId))
		},
		onError() {
			toast.error('Error creating color')
		}
	})

	return useMemo(
		() => ({
			createColor,
			isLoadingCreate
		}),
		[createColor, isLoadingCreate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\colors\useDeleteColor.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { colorService } from '@/services/color.service'

export const useDeleteColor = () => {
	const params = useParams<{ storeId: string; colorId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: deleteColor, isPending: isLoadingDelete } = useMutation({
		mutationKey: ['delete color'],
		mutationFn: () => colorService.delete(params.colorId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get colors for store dashboard']
			})
			toast.success('Color deleted')
			router.push(STORE_URL.colors(params.storeId))
		},
		onError() {
			toast.error('Error deleting color')
		}
	})

	return useMemo(
		() => ({ deleteColor, isLoadingDelete }),
		[deleteColor, isLoadingDelete]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\colors\useGetColors.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'

import { colorService } from '@/services/color.service'

export const useGetColors = () => {
	const params = useParams<{ storeId: string }>()

	const { data: colors, isLoading } = useQuery({
		queryKey: ['get colors for store dashboard'],
		queryFn: () => colorService.getByStoreId(params.storeId)
	})

	return useMemo(
		() => ({
			colors,
			isLoading
		}),
		[colors, isLoading]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\colors\useUpdateColor.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { colorService } from '@/services/color.service'

import { IColorInput } from '@/shared/types/color.interface'

export const useUpdateColor = () => {
	const params = useParams<{ colorId: string }>()
	const queryClient = useQueryClient()

	const { mutate: updateColor, isPending: isLoadingUpdate } = useMutation({
		mutationKey: ['update color'],
		mutationFn: (data: IColorInput) =>
			colorService.update(params.colorId, data),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get colors for store dashboard']
			})
			toast.success('Color updated')
		},
		onError() {
			toast.error('Error updating color')
		}
	})

	return useMemo(
		() => ({ updateColor, isLoadingUpdate }),
		[updateColor, isLoadingUpdate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\products\useCreateProduct.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { productService } from '@/services/product.service'

import { IProductInput } from '@/shared/types/product.interface'

export const useCreateProduct = () => {
	const params = useParams<{ storeId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: createProduct, isPending: isLoadingCreate } = useMutation({
		mutationKey: ['create product'],
		mutationFn: (data: IProductInput) =>
			productService.create(data, params.storeId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get products for store dashboard']
			})
			toast.success('Item created')
			router.push(STORE_URL.products(params.storeId))
		},
		onError() {
			toast.error('Error creating product')
		}
	})

	return useMemo(
		() => ({
			createProduct,
			isLoadingCreate
		}),
		[createProduct, isLoadingCreate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\products\useDeleteProduct.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { productService } from '@/services/product.service'

export const useDeleteProduct = () => {
	const params = useParams<{ storeId: string; productId: string }>()
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: deleteProduct, isPending: isLoadingDelete } = useMutation({
		mutationKey: ['delete product'],
		mutationFn: () => productService.delete(params.productId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get products for store dashboard']
			})
			toast.success('Item deleted')
			router.push(STORE_URL.products(params.storeId))
		},
		onError() {
			toast.error('Error deleting product')
		}
	})

	return useMemo(
		() => ({ deleteProduct, isLoadingDelete }),
		[deleteProduct, isLoadingDelete]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\products\useGetProducts.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'

import { productService } from '@/services/product.service'

export const useGetProducts = () => {
	const params = useParams<{ storeId: string }>()

	const { data: products, isLoading } = useQuery({
		queryKey: ['get products for store dashboard'],
		queryFn: () => productService.getByStoreId(params.storeId)
	})

	return useMemo(
		() => ({
			products,
			isLoading
		}),
		[products, isLoading]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\products\useUpdateProduct.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { productService } from '@/services/product.service'

import { IProductInput } from '@/shared/types/product.interface'

export const useUpdateProduct = () => {
	const params = useParams<{ productId: string }>()
	const queryClient = useQueryClient()

	const { mutate: updateProduct, isPending: isLoadingUpdate } = useMutation({
		mutationKey: ['update product'],
		mutationFn: (data: IProductInput) =>
			productService.update(params.productId, data),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['get products for store dashboard']
			})
			toast.success('Item updated')
		},
		onError() {
			toast.error('Error updating product')
		}
	})

	return useMemo(
		() => ({ updateProduct, isLoadingUpdate }),
		[updateProduct, isLoadingUpdate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\reviews\useCreateReview.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { reviewService } from '@/services/review.service'

import { IReviewInput } from '@/shared/types/review.interface'

export const useCreateReview = (storeId: string) => {
	const params = useParams<{ id: string }>()

	const queryClient = useQueryClient()

	const { mutate: createReview, isPending: isLoadingCreate } = useMutation({
		mutationKey: ['create review'],
		mutationFn: (data: IReviewInput) =>
			reviewService.create(data, params.id, storeId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['product']
			})
			toast.success('Review created')
		},
		onError() {
			toast.error('Error creating review')
		}
	})

	return useMemo(
		() => ({
			createReview,
			isLoadingCreate
		}),
		[createReview, isLoadingCreate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\reviews\useDeleteReview.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { reviewService } from '@/services/review.service'

export const useDeleteReview = () => {
	const queryClient = useQueryClient()

	const { mutate: deleteReview, isPending: isLoadingDelete } = useMutation({
		mutationKey: ['delete review'],
		mutationFn: (reviewId: string) => reviewService.delete(reviewId),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['product']
			})
			toast.success('Review deleted')
		},
		onError() {
			toast.error('Error deleting review')
		}
	})

	return useMemo(
		() => ({ deleteReview, isLoadingDelete }),
		[deleteReview, isLoadingDelete]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\reviews\useGetReviews.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'

import { reviewService } from '@/services/review.service'

export const useGetReviews = () => {
	const params = useParams<{ storeId: string }>()

	const { data: reviews, isLoading } = useQuery({
		queryKey: ['get reviews for store dashboard'],
		queryFn: () => reviewService.getByStoreId(params.storeId)
	})

	return useMemo(
		() => ({
			reviews,
			isLoading
		}),
		[reviews, isLoading]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\statistics\useGetStatistics.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useQuery } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'

import { statisticsService } from '@/services/statistics.service'

export const useGetStatistics = () => {
	const params = useParams<{ storeId: string }>()

	const { data: main } = useQuery({
		queryKey: ['get main statistics'],
		queryFn: () => statisticsService.getMain(params.storeId)
	})

	const { data: middle } = useQuery({
		queryKey: ['get middle statistics'],
		queryFn: () => statisticsService.getMiddle(params.storeId)
	})

	return useMemo(() => ({ main, middle }), [main, middle])
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\stores\useCreateStore.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { STORE_URL } from '@/config/url.config'

import { storeService } from '@/services/store.service'

import { IStoreCreate } from '@/shared/types/store.interface'

export function useCreateStore() {
	const router = useRouter()

	const queryClient = useQueryClient()

	const { mutate: createStore, isPending: isLoadingCreate } = useMutation({
		mutationKey: ['create store'],
		mutationFn: (data: IStoreCreate) => storeService.create(data),
		onSuccess(store) {
			queryClient.invalidateQueries({
				queryKey: ['profile']
			})
			toast.success('Store created')
			router.push(STORE_URL.home(store.id))
		},
		onError() {
			toast.error('Error creating store')
		}
	})

	return useMemo(
		() => ({ createStore, isLoadingCreate }),
		[createStore, isLoadingCreate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\stores\useDeleteStore.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation } from '@tanstack/react-query'
import { useParams, useRouter } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { PUBLIC_URL } from '@/config/url.config'

import { storeService } from '@/services/store.service'

export function useDeleteStore() {
	const params = useParams<{ storeId: string }>()
	const router = useRouter()

	const { mutate: deleteStore, isPending: isLoadingDelete } = useMutation({
		mutationKey: ['delete store'],
		mutationFn: () => storeService.delete(params.storeId),
		onSuccess() {
			toast.success('Store deleted')
			router.push(PUBLIC_URL.home())
		},
		onError() {
			toast.error('Error deleting store')
		}
	})

	return useMemo(
		() => ({ deleteStore, isLoadingDelete }),
		[deleteStore, isLoadingDelete]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\hooks\queries\stores\useUpdateStore.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'
import { useParams } from 'next/navigation'
import { useMemo } from 'react'
import toast from 'react-hot-toast'

import { storeService } from '@/services/store.service'

import { IStoreEdit } from '@/shared/types/store.interface'

export function useUpdateStore() {
	const params = useParams<{ storeId: string }>()

	const queryClient = useQueryClient()

	const { data: store } = useQuery({
		queryKey: ['store', params.storeId],
		queryFn: () => storeService.getById(params.storeId)
	})

	const { mutate: updateStore, isPending: isLoadingUpdate } = useMutation({
		mutationKey: ['update store'],
		mutationFn: (data: IStoreEdit) =>
			storeService.update(params.storeId, data),
		onSuccess() {
			queryClient.invalidateQueries({
				queryKey: ['profile']
			})
			toast.success('Store updated')
		},
		onError() {
			toast.error('Error updating store')
		}
	})

	return useMemo(
		() => ({ store, updateStore, isLoadingUpdate }),
		[store, updateStore, isLoadingUpdate]
	)
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\lib\utils.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\category.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosClassic, axiosWithAuth } from '@/api/api.interceptors';

import { API_URL } from '@/config/api.config';

import { ICategory, ICategoryInput } from '@/shared/types/category.interface';

class CategoryService {
  async getByStoreId(id: string) {
    const { data } = await axiosWithAuth<ICategory[]>({
      url: API_URL.categories(`by-storeId/${id}`),
      method: 'GET'
    });

    return data;
  }

  async getById(id: string) {
    const { data } = await axiosClassic<ICategory>({
      url: API_URL.categories(`by-id/${id}`),
      method: 'GET'
    });

    return data;
  }

  async create(data: ICategoryInput, storeId: string) {
    const { data: createdCategory } = await axiosWithAuth<ICategory>({
      url: API_URL.categories(`create/${storeId}`),
      method: 'POST',
      data
    });

    return createdCategory;
  }

  async update(id: string, data: ICategoryInput) {
    const { data: updatedCategory } = await axiosWithAuth<ICategory>({
      url: API_URL.categories(`${id}`),
      method: 'PUT',
      data
    });

    return updatedCategory;
  }

  async delete(id: string) {
    const { data: deletedCategory } = await axiosWithAuth<ICategory>({
      url: API_URL.categories(`${id}`),
      method: 'DELETE'
    });

    return deletedCategory;
  }
}

export const categoryService = new CategoryService();


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\color.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import { IColor, IColorInput } from '@/shared/types/color.interface'

class ColorService {
	async getByStoreId(id: string) {
		const { data } = await axiosWithAuth<IColor[]>({
			url: API_URL.colors(`by-storeId/${id}`),
			method: 'GET'
		})

		return data || []
	}

	async getById(id: string) {
		const { data } = await axiosWithAuth<IColor>({
			url: API_URL.colors(`by-id/${id}`),
			method: 'GET'
		})

		return data
	}

	async create(data: IColorInput, storeId: string) {
		const { data: createdColor } = await axiosWithAuth<IColor>({
			url: API_URL.colors(`${storeId}`),
			method: 'POST',
			data
		})

		return createdColor
	}

	async update(id: string, data: IColorInput) {
		const { data: updatedColor } = await axiosWithAuth<IColor>({
			url: API_URL.colors(`${id}`),
			method: 'PUT',
			data
		})

		return updatedColor
	}

	async delete(id: string) {
		const { data: deletedColor } = await axiosWithAuth<IColor>({
			url: API_URL.colors(`${id}`),
			method: 'DELETE'
		})

		return deletedColor
	}
}

export const colorService = new ColorService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\file.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

interface IFile {
	url: string
	name: string
}

class FileService {
	async upload(file: FormData, folder?: string) {
		const { data } = await axiosWithAuth<IFile[]>({
			url: API_URL.files(),
			method: 'POST',
			data: file,
			params: {
				folder
			},
			headers: {
				'Content-Type': 'multipart/form-data'
			}
		})

		return data
	}
}

export const fileService = new FileService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\order.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors';

import { API_URL } from '@/config/api.config';

import {
  EnumOrderStatus,
  IPaymentResponse
} from '@/shared/types/order.interface';

type TypeData = {
  status?: EnumOrderStatus;
  items: {
    quantity: number;
    price: number;
    productId: string;
    storeId: string;
  }[];
};

class OrderService {
  async place(data: TypeData) {
    return axiosWithAuth<IPaymentResponse>({
      url: API_URL.orders('place'),
      method: 'POST',
      data
    });
  }
}

export const orderService = new OrderService();


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\product.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosClassic, axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import { IProduct, IProductInput } from '@/shared/types/product.interface'

class ProductService {
	async getAll(searchTerm?: string | null) {
		const { data } = await axiosClassic<IProduct[]>({
			url: API_URL.products(),
			method: 'GET',
			params: searchTerm
				? {
						searchTerm
					}
				: {}
		})

		return data || []
	}

	async getByStoreId(id: string) {
		const { data } = await axiosWithAuth<IProduct[]>({
			url: API_URL.products(`by-storeId/${id}`),
			method: 'GET'
		})

		return data || []
	}

	async getById(id: string) {
		const { data } = await axiosClassic<IProduct>({
			url: API_URL.products(`by-id/${id}`),
			method: 'GET'
		})
		
		return data
	}

	async getByCategory(categoryId: string) {
		const { data } = await axiosClassic<IProduct[]>({
			url: API_URL.products(`by-category/${categoryId}`),
			method: 'GET'
		})
		
		return data
	}

	async getMostPopular() {
		const { data } = await axiosClassic<IProduct[]>({
			url: API_URL.products(`most-popular`),
			method: 'GET'
		})

		return data
	}

	async getSimilar(id: string) {
		const { data } = await axiosClassic<IProduct[]>({
			url: API_URL.products(`similar/${id}`),
			method: 'GET'
		})

		return data
	}

	async create(data: IProductInput, storeId: string) {
		const { data: createdProduct } = await axiosWithAuth<IProduct[]>({
			url: API_URL.products(`create/${storeId}`),
			method: 'POST',
			data
		})

		return createdProduct
	}

	async update(id: string, data: IProductInput) {
		const { data: updatedProduct } = await axiosWithAuth<IProduct>({
			url: API_URL.products(`${id}`),
			method: 'PUT',
			data
		})

		return updatedProduct
	}

	async delete(id: string) {
		const { data: deletedProduct } = await axiosWithAuth<IProduct>({
			url: API_URL.products(`${id}`),
			method: 'DELETE'
		})

		return deletedProduct
	}
}

export const productService = new ProductService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\review.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import { IReview, IReviewInput } from '@/shared/types/review.interface'

class ReviewService {
	async getByStoreId(id: string) {
		const { data } = await axiosWithAuth<IReview[]>({
			url: API_URL.reviews(`by-storeId/${id}`),
			method: 'GET'
		})

		return data
	}

	async create(data: IReviewInput, productId: string, storeId: string) {
		const { data: createdReview } = await axiosWithAuth<IReview>({
			url: API_URL.reviews(`create/${productId}/${storeId}`),
			method: 'POST',
			data
		})

		return createdReview
	}

	async delete(id: string) {
		const { data: deletedReview } = await axiosWithAuth<IReview>({
			url: API_URL.reviews(`${id}`),
			method: 'DELETE'
		})

		return deletedReview
	}
}

export const reviewService = new ReviewService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\statistics.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import {
	IMainStatistics,
	IMiddleStatistics
} from '@/shared/types/statistics.interface'

class StatisticsService {
	async getMain(storeId: string) {
		const { data } = await axiosWithAuth<IMainStatistics[]>({
			url: API_URL.statistics(`main/${storeId}`),
			method: 'GET'
		})

		return data
	}

	async getMiddle(storeId: string) {
		const { data } = await axiosWithAuth<IMiddleStatistics>({
			url: API_URL.statistics(`middle/${storeId}`),
			method: 'GET'
		})

		return data
	}
}

export const statisticsService = new StatisticsService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\store.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import {
	IStore,
	IStoreCreate,
	IStoreEdit
} from '@/shared/types/store.interface'

class StoreService {
	async getById(id: string) {
		const { data } = await axiosWithAuth<IStore>({
			url: API_URL.stores(`${id}`),
			method: 'GET'
		})

		return data
	}

	async create(data: IStoreCreate) {
		const { data: createdStore } = await axiosWithAuth<IStore>({
			url: API_URL.stores('create'),
			method: 'POST',
			data
		})

		return createdStore
	}

	async update(id: string, data: IStoreEdit) {
		const { data: updatedStore } = await axiosWithAuth<IStore>({
			url: API_URL.stores(`${id}`),
			method: 'PUT',
			data
		})

		return updatedStore
	}

	async delete(id: string) {
		const { data: deletedStore } = await axiosWithAuth<IStore>({
			url: API_URL.stores(`${id}`),
			method: 'DELETE'
		})

		return deletedStore
	}
}

export const storeService = new StoreService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\user.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosWithAuth } from '@/api/api.interceptors'

import { API_URL } from '@/config/api.config'

import { IUser } from '@/shared/types/user.interface'

class UserService {
	async getProfile() {
		const { data } = await axiosWithAuth<IUser>({
			url: API_URL.users('profile'),
			method: 'GET'
		})

		return data
	}

	async toggleFavorite(productId: string) {
		return axiosWithAuth<IUser>({
			url: API_URL.users(`profile/favorites/${productId}`),
			method: 'PATCH'
		})
	}
}

export const userService = new UserService()


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\auth\auth-token.serice.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Cookies from 'js-cookie';

export enum EnumTokens {
  'ACCESS_TOKEN' = 'access_token',
  'REFRESH_TOKEN' = 'refresh_token'
}

export const getAccessToken = () => {
  const accessToken = Cookies.get(EnumTokens.ACCESS_TOKEN);
  return accessToken || null;
};

export const saveTokenStorage = (accessToken: string) => {
  Cookies.set(EnumTokens.ACCESS_TOKEN, accessToken, {
    domain: process.env.APP_DOMAIN,
    sameSite: 'strict',
    expires: 1
  });
};

export const removeFromStorage = () => {
  Cookies.remove(EnumTokens.ACCESS_TOKEN);
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\auth\auth-token.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import Cookies from 'js-cookie';

export enum EnumTokens {
  ACCESS_TOKEN = 'access_token',
  REFRESH_TOKEN = 'refresh_token'
}

export const getAccessToken = () => {
  const accessToken = Cookies.get(EnumTokens.ACCESS_TOKEN);
  return accessToken || null;
};

export const saveTokenToStorage = (accessToken: string) => {
  Cookies.set(EnumTokens.ACCESS_TOKEN, accessToken, {
    domain: process.env.APP_DOMAIN,
    sameSite: 'strict',
    expires: 1
  });
};

export const removeFromStorage = () => {
  Cookies.remove(EnumTokens.ACCESS_TOKEN);
};


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\services\auth\auth.service.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { axiosClassic } from '@/api/api.interceptors';

import { API_URL } from '@/config/api.config';

import { IAuthForm, IAuthResponse } from '@/shared/types/auth.interface';

import { removeFromStorage, saveTokenToStorage } from './auth-token.service';

class AuthService {
  public async main(type: 'login' | 'register', data: IAuthForm) {
    const response = await axiosClassic<IAuthResponse>({
      url: API_URL.auth(`${type}`),
      method: 'POST',
      data
    });

    const accessToken = response.data.accessToken;

    if (accessToken) saveTokenToStorage(accessToken);

    return response;
  }

  public async getNewTokens() {
    const response = await axiosClassic<IAuthResponse>({
      url: API_URL.auth('login/access-token'),
      method: 'POST'
    });

    const accessToken = response.data.accessToken;

    if (accessToken) saveTokenToStorage(accessToken);

    return response;
  }

  public async logout() {
    const response = await axiosClassic<boolean>({
      url: API_URL.auth('logout'),
      method: 'POST'
    });

    if (response.data) removeFromStorage();

    return response;
  }
}

export const authService = new AuthService();


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\regex.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const validEmail =
	/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\regex.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const validEmail =
	/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\auth.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { IUser } from './user.interface';

export interface IAuthForm {
  name: string;
  email: string;
  password: string;
}

export interface IAuthResponse {
  user: IUser;
  accessToken: string;
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\cart.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { IProduct } from "./product.interface"

export interface ICartItem {
    id: number
    product: IProduct
    quantity: number
    price: number
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\category.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export interface ICategory {
  id: string;
  createdAt: string;
  title: string;
  description: string;
  storeId: string;
}

export interface ICategoryInput
  extends Pick<ICategory, 'title' | 'description'> {}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\color.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export interface IColor {
    id: string
    createdAt: string
    name: string
    value: string
    storeId: string 
}

export interface IColorInput extends Pick<IColor, 'name' | 'value'> {}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\order.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
// shared/types/order.interface.ts
import { ICartItem } from './cart.interface';
import { IUser } from './user.interface';

// Интерфейс для суммы (аналог amount_total в Stripe)
interface IAmount {
  value: number; // Сумма в центах, например 99999900
  currency: string; // Например, "usd"
}

// Интерфейс для получателя (recipient), адаптирован под Stripe
interface IRecipient {
  account_id: string | null; // В Stripe нет прямого аналога, оставляем null-able
  gateway_id: string | null; // Аналогично
}

// Интерфейс для метода оплаты (payment_method), адаптирован под Stripe
interface IPaymentMethod {
  type: string; // Например, "card" из payment_method_types
  id: string | null; // ID метода оплаты или null до завершения
  saved: boolean; // Обычно false для Checkout Session
}

// Интерфейс для подтверждения (confirmation), адаптирован под Stripe
interface IConfirmation {
  type: string; // "redirect" для Stripe Checkout
  return_url: string; // Соответствует success_url, например "http://localhost:3000/thanks"
  confirmation_url: string; // Соответствует url, например "https://checkout.stripe.com/..."
}

export interface IPaymentResponse {
  id: string; // "cs_test_a1WjZmLj6drvBzvXX8MqDmzirpt0Tr4Mn3SIxUaA4XDc9fPNRjBpFjHGyo"
  url: string;
  status: string; // "open", "complete", "expired"
  amount: IAmount; // { value: 99999900, currency: "usd" } из amount_total
  recipient: IRecipient; // { account_id: null, gateway_id: null }
  payment_method: IPaymentMethod; // { type: "card", id: null, saved: false }
  created_at: number; // 1740136032 из created
  confirmation: IConfirmation; // { type: "redirect", return_url: "http://localhost:3000/thanks", confirmation_url: "https://checkout.stripe.com/..." }
}

export enum EnumOrderStatus {
  PENDING = 'Pending',
  PAYED = 'Payed'
}

export interface IOrder {
  id: string;
  createdAt: string;
  items: ICartItem[];
  status: EnumOrderStatus;
  user: IUser;
  total: number;
  stripeSessionId?: string; // Опционально для связи с Stripe Checkout Session
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\product.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { ICategory } from './category.interface';
import { IColor } from './color.interface';
import { IReview } from './review.interface';
import { IStore } from './store.interface';

export interface IProduct {
  id: string;
  title: string;
  description: string;
  price: number;
  images: string[];
  category: ICategory;
  reviews: IReview[];
  color: IColor;
  store: IStore;
  storeId: string;
}

export interface IProductInput
  extends Omit<IProduct, 'id' | 'reviews' | 'store' | 'category' | 'color'> {
  categoryId: string;
  colorId: string;
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\review.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { IUser } from "./user.interface"

export interface IReview {
    id: string
    createdAt: string
    text: string
    rating: number
    user: IUser
}

export interface IReviewInput extends Pick<IReview, 'text' | 'rating'> {}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\statistics.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export interface IMainStatistics {
  id: number;
  name: string;
  value: number;
}

export interface IMonthlySales {
  date: string;
  value: number;
}

export interface ILastUsers {
  id: string;
  name: string;
  email: string;
  picture: string;
  total: number;
}

export interface IMiddleStatistics {
  monthlySales: IMonthlySales[];
  lastUsers: ILastUsers[];
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\store.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export interface IStore {
   id: string 
   title: string
   description: string
}

export interface IStoreCreate extends Pick<IStore, 'title'> {}

export interface IStoreEdit extends Pick<IStore, 'id'> {}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\shared\types\user.interface.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { IOrder } from "./order.interface";
import { IProduct } from "./product.interface";
import { IStore } from "./store.interface";

export interface IUser {
    id: string;
    name: string;
    email: string;
    picture: string
    favorites: IProduct[]
    orders: IOrder[]
    stores: IStore[]
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\store\root-actions.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { cartSlice } from './cart/cart.slice'

export const rootActions = {
	...cartSlice.actions
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\store\store.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { combineReducers, configureStore } from '@reduxjs/toolkit';
import {
  FLUSH,
  PAUSE,
  PERSIST,
  persistStore,
  PURGE,
  REGISTER,
  REHYDRATE
} from 'redux-persist';
import storage from 'redux-persist/lib/storage';

import { cartSlice } from './cart/cart.slice';

const persistConfig = {
  key: 'shop',
  storage,
  whiteList: ['cart']
};

const isClient = typeof window !== 'undefined';

const combinedReducers = combineReducers({
  cart: cartSlice.reducer
});

let mainReducer = combinedReducers;

if (isClient) {
  const { persistReducer } = require('redux-persist');
  const storage = require('redux-persist/lib/storage');

  mainReducer = persistReducer(persistConfig, combinedReducers);
}

export const store = configureStore({
  reducer: mainReducer,
  middleware: getDefaultMiddleware =>
    getDefaultMiddleware({
      serializableCheck: {
        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]
      }
    })
});

export const persistor = persistStore(store);

export type TypeRootState = ReturnType<typeof mainReducer>;


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\store\cart\cart.slice.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { PayloadAction, createSlice } from '@reduxjs/toolkit'

import type {
	IAddToCartPayload,
	ICartInitialState,
	IChangeQuantityPayload
} from './cart.types'

const initialState: ICartInitialState = {
	items: []
}

export const cartSlice = createSlice({
	name: 'cart',
	initialState,
	reducers: {
		addToCart: (state, action: PayloadAction<IAddToCartPayload>) => {
			const isExist = state.items.some(
				item => item.product.id === action.payload.product.id
			)

			if (!isExist)
				state.items.push({ ...action.payload, id: state.items.length })
		},
		removeFromCart: (state, action: PayloadAction<{ id: number }>) => {
			state.items = state.items.filter(
				item => item.id !== action.payload.id
			)
		},
		changeQuantity: (
			state,
			action: PayloadAction<IChangeQuantityPayload>
		) => {
			const { id, type } = action.payload
			const item = state.items.find(item => item.id === id)
			if (item) type === 'plus' ? item.quantity++ : item.quantity--
		},
		reset: state => {
			state.items = []
		}
	}
})


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\store\cart\cart.types.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import type { ICartItem } from '@/shared/types/cart.interface'

export interface ICartInitialState {
	items: ICartItem[]
}

export interface IAddToCartPayload extends Omit<ICartItem, 'id'> {}

export interface IChangeQuantityPayload extends Pick<ICartItem, 'id'> {
	type: 'minus' | 'plus'
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\styles\globals.scss ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: Arial, Helvetica, sans-serif;
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;

    font-family: var(--font-geist-sans), sans-serif;
  }
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\utils\clsx.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { type ClassValue, clsx } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
	return twMerge(clsx(inputs))
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\utils\clsx.tsx ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
import { type ClassValue, clsx } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
	return twMerge(clsx(inputs))
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\utils\date\format-date.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const formatDate = (dateString: string) => {
	const date = new Date(dateString)

	const day = String(date.getDate()).padStart(2, '0')
	const month = String(date.getMonth() + 1).padStart(2, '0')
	const year = date.getFullYear()

	return `${day}.${month}.${year}`
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\utils\string\format-price.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export function formatPrice(price: number) {
	return price.toLocaleString('ru-RU', {
		style: 'currency',
		currency: 'USD',
		minimumFractionDigits: 0
	})
}


--- File: C:\Users\carpe\OneDrive\??????? ????\Xanoot\shop\frontend\src\utils\string\get-review-word-with-ending.ts ---
Created: 02/21/2025 12:07:45
Modified: 02/21/2025 12:07:45
export const getReviewWordWithEnding = (reviewCount: number) => {
	switch (reviewCount) {
		case 1 || 21 || 31:
			return `${reviewCount} review`
		default:
			return `${reviewCount} reviews`
	}
}


